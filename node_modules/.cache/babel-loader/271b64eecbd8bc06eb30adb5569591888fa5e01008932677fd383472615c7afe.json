{"ast":null,"code":"'use client';\n\n/* eslint-disable jsx-a11y/aria-role */\nimport _objectSpread from \"/Users/yokkai/Documents/GitHub/landing_page/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/yokkai/Documents/GitHub/landing_page/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"className\", \"slots\", \"slotProps\", \"direction\", \"orientation\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from \"./tabScrollButtonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [\"&.\".concat(tabScrollButtonClasses.disabled)]: {\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      width: '100%',\n      height: 40,\n      '& svg': {\n        transform: 'var(--TabScrollButton-svgRotate)'\n      }\n    }\n  }]\n});\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  var _slots$StartScrollBut, _slots$EndScrollButto;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n      className,\n      slots = {},\n      slotProps = {},\n      direction,\n      orientation,\n      disabled\n    } = props,\n    other = _objectWithoutProperties(props, _excluded);\n  const isRtl = useRtl();\n  const ownerState = _objectSpread({\n    isRtl\n  }, props);\n  const classes = useUtilityClasses(ownerState);\n  const StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) !== null && _slots$StartScrollBut !== void 0 ? _slots$StartScrollBut : KeyboardArrowLeft;\n  const EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) !== null && _slots$EndScrollButto !== void 0 ? _slots$EndScrollButto : KeyboardArrowRight;\n  const startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  const endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _objectSpread(_objectSpread({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other), {}, {\n    style: _objectSpread(_objectSpread({}, other.style), orientation === 'vertical' && {\n      '--TabScrollButton-svgRotate': \"rotate(\".concat(isRtl ? -90 : 90, \"deg)\")\n    }),\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, _objectSpread({}, startButtonIconProps)) : /*#__PURE__*/_jsx(EndButtonIcon, _objectSpread({}, endButtonIconProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","React","PropTypes","clsx","composeClasses","useRtl","useSlotProps","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","styled","useDefaultProps","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","concat","variants","style","height","transform","TabScrollButton","forwardRef","inProps","ref","_slots$StartScrollBut","_slots$EndScrollButto","className","slotProps","direction","other","isRtl","StartButtonIcon","StartScrollButtonIcon","EndButtonIcon","EndScrollButtonIcon","startButtonIconProps","elementType","externalSlotProps","startScrollButtonIcon","additionalProps","fontSize","endButtonIconProps","endScrollButtonIcon","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","shape","oneOfType","func","sx","arrayOf"],"sources":["/Users/yokkai/Documents/GitHub/landing_page/node_modules/@mui/material/TabScrollButton/TabScrollButton.js"],"sourcesContent":["'use client';\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from \"./tabScrollButtonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      width: '100%',\n      height: 40,\n      '& svg': {\n        transform: 'var(--TabScrollButton-svgRotate)'\n      }\n    }\n  }]\n});\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n    className,\n    slots = {},\n    slotProps = {},\n    direction,\n    orientation,\n    disabled,\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = {\n    isRtl,\n    ...props\n  };\n  const classes = useUtilityClasses(ownerState);\n  const StartButtonIcon = slots.StartScrollButtonIcon ?? KeyboardArrowLeft;\n  const EndButtonIcon = slots.EndScrollButtonIcon ?? KeyboardArrowRight;\n  const startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  const endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, {\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null,\n    ...other,\n    style: {\n      ...other.style,\n      ...(orientation === 'vertical' && {\n        '--TabScrollButton-svgRotate': `rotate(${isRtl ? -90 : 90}deg)`\n      })\n    },\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, {\n      ...startButtonIconProps\n    }) : /*#__PURE__*/_jsx(EndButtonIcon, {\n      ...endButtonIconProps\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}